plugins {
    id 'com.android.library'
    id 'com.github.dcendents.android-maven'
    id 'com.jfrog.bintray'
    id 'de.mannodermaus.android-junit5'
}

ext {
    apiLevel = System.getProperty('API') ?: System.getenv('API')
    buildToolsVersion = System.getProperty('BUILD_TOOLS_VERSION') ?: System.getenv('BUILD_TOOLS_VERSION')
    androidNdkVersion = System.getProperty('NDK_VERSION') ?: System.getenv('NDK_VERSION')
    ROC_BASE_DIR = System.getProperty('ROC_BASE_DIR') ?: System.getenv('ROC_BASE_DIR') ?: file("../build/libroc").absolutePath
    bintrayUser = System.getProperty('BINTRAY_USER') ?: System.getenv('BINTRAY_USER')
    bintrayKey = System.getProperty('BINTRAY_KEY') ?: System.getenv('BINTRAY_KEY')
    bintrayRepo = System.getProperty('BINTRAY_REPO') ?: System.getenv('BINTRAY_REPO')
    bintrayRepoOrg = System.getProperty('BINTRAY_REPO_ORG') ?: System.getenv('BINTRAY_REPO_ORG')
}

android {
    compileSdkVersion "${apiLevel}".toInteger()
    buildToolsVersion "${buildToolsVersion}"
    ndkVersion "${androidNdkVersion}"

    defaultConfig {
        minSdkVersion 26
        targetSdkVersion "${apiLevel}".toInteger()
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunnerArgument "runnerBuilder", "de.mannodermaus.junit5.AndroidJUnit5Builder"

        externalNativeBuild {
            cmake {
                arguments "-DROC_BASE_DIR=${ROC_BASE_DIR}", "-DANDROID_STL=c++_shared"
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude "META-INF/LICENSE*"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main {
            java.srcDirs +=  "../../src/main/java" 
            // pack roc shared library into aar
            jniLibs.srcDirs += "${ROC_BASE_DIR}/lib"
            manifest.srcFile 'AndroidManifest.xml'
        }
        androidTest {
            java.srcDirs += "../../src/test/java"
        }
    }

    externalNativeBuild {
        cmake {
            path "../../roc_jni/CMakeLists.txt"
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(":commons")

    androidTestImplementation "androidx.test:runner:1.2.0"
    androidTestImplementation "org.junit.jupiter:junit-jupiter-api:5.6.2"
    androidTestImplementation "de.mannodermaus.junit5:android-test-core:1.2.0"
    androidTestRuntimeOnly "de.mannodermaus.junit5:android-test-runner:1.2.0"

    testImplementation "org.junit.jupiter:junit-jupiter-api:5.6.2"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.6.2"
}

task sourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += project.files(project(":commons").sourceSets.main.runtimeClasspath.asPath)
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier.set('javadoc')
    from javadoc.destinationDir
}


artifacts {
    archives javadocJar
    archives sourcesJar
}

bintray {
    user = bintrayUser
    key = bintrayKey

    pkg {
        repo = bintrayRepo
        name = project.name
        userOrg = bintrayRepoOrg
        configurations = ['archives']
        desc = 'Android library for Roc Toolkit'
        websiteUrl = 'https://github.com/roc-streaming/roc-java'
        issueTrackerUrl = 'https://github.com/roc-streaming/roc-java/issues'
        vcsUrl = 'https://github.com/roc-streaming/roc-java.git'
        licenses = ["MIT"]
        publish = true
        publicDownloadNumbers = true

        version {
            gpg {
                sign = true
            }
        }
    }
}

install {
    repositories.mavenInstaller {
        pom {
            project {
                packaging 'aar'
                name 'roc-android'
                description 'Android library for Roc Toolkit'
                url 'https://github.com/roc-streaming/roc-java'

                licenses {
                    license {
                        name 'MIT'
                    }
                }

                scm {
                    connection 'scm:git:https://github.com/roc-streaming/roc-java.git'
                    developerConnection 'scm:git:https://github.com/roc-streaming/roc-java.git'
                    url 'https://github.com/roc-streaming/roc-java'
                }
            }
        }
    }
}
